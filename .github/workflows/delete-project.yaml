name: delete project
on:
  workflow_call:
    inputs:
      project:
        required: true
        type: string
      type:
        required: true
        type: string
      rafay-environment:
        required: true
        type: string
  workflow_dispatch:
    inputs:
      type:
        type: choice
        description: Type of cluster to provision
        options: 
        - eks
        - gke
      project:
        description: 'project to delete - WARNING: Everything in the project will be deleted.'
        default: "api-team"
      rafay-environment:
        type: choice
        description: Rafay console environment
        options: 
        - prod
        - preview

env:
  PROJECT: ${{ inputs.project || 'api-team' }}
  CLUSTER_TYPE: ${{ inputs.type || 'eks' }}

jobs:
  delete-project:
    environment:
      name: ${{ inputs.rafay-environment }}
    runs-on: ubuntu-latest
    env:
      RCTL_REST_ENDPOINT: ${{ secrets.RCTL_REST_ENDPOINT }}
      RCTL_API_KEY: ${{ secrets.RCTL_API_KEY }}
      RCTL_API_SECRET: ${{ secrets.RCTL_API_SECRET }}
      RCTL_PROJECT: ${{ inputs.project }}
      CLUSTER_TYPE: ${{ inputs.type }}
    steps:
    - name: Setup rctl
      uses: rafay-presales/rctl-setup@main
    - name: delete-blueprints
      shell: bash
      run: |
        rctl get blueprint -p $RCTL_PROJECT -o yaml > blueprints.yaml
        readarray blueprints < <(yq e -o=j -I=0 '.[]' blueprints.yaml )
        for blueprint in "${blueprints[@]}"; do
          # identity mapping is a yaml snippet representing a single entry
          BLUEPRINT_NAME=$(echo "$blueprint" | yq e '.metadata.name' -)
          echo "bllueprint name: $BLUEPRINT_NAME"
          rctl delete bluepring $BLUEPRINT_NAME -y --project $RCTL_PROJECT --wait
        done
    - name: delete-namespaces
      shell: bash
      run: |
        rctl get ns -p $RCTL_PROJECT -o yaml > namespaces.yaml
        readarray namespaces < <(yq e -o=j -I=0 '.[]' namespaces.yaml )
        for namespace in "${namespaces[@]}"; do
          # identity mapping is a yaml snippet representing a single entry
          NAMESPACE_NAME=$(echo "$namespace" | yq e '.metadata.name' -)
          echo "namespace name: $NAMESPACE_NAME"
          rctl delete ns $NAMESPACE_NAME -y --project $RCTL_PROJECT --wait
        done
    - name: delete-project
      shell: bash
      run: rctl delete project $RCTL_PROJECT --wait
